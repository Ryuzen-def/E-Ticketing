<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>E-Ticketing - Ticket Entry</title>
    <link rel="stylesheet" href="/css/bootstrap.css">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/font-awesome.css">
    <link rel="stylesheet" href="/css/all.css">
    <script>
        async function fetchMaskapai() {
            try {
                const response = await fetch("http://localhost:3000/maskapai");
                const users = await response.json();

                const tableBody = document.getElementById("pswt");
                tableBody.innerHTML = "<option hidden selected>Select Maskapai</option>";

                users.forEach((maskapai) => {
                    const row = `<option value="${maskapai.id_pesawat}">${maskapai.nama_pesawat}</option>`;
                    tableBody.innerHTML += row;
                });
            } catch (error) {
                console.error("Error fetching users:", error);
            }
        }

        async function fetchAirport() {
            try {
                const response = await fetch("http://localhost:3000/airport");
                const airports = await response.json();
        
                const airportFromSelect = document.getElementById("airportfrom");
                const airportToSelect = document.getElementById("airportto");
        
                airportFromSelect.innerHTML = "<option hidden selected>Select Depature Airport</option>";
                airportToSelect.innerHTML = "<option hidden selected>Select Arrival Airport</option>";
        
                // Kelompokkan bandara berdasarkan negara
                const groupedAirports = airports.reduce((acc, airport) => {
                    if (!acc[airport.country]) {
                        acc[airport.country] = [];
                    }
                    acc[airport.country].push(airport);
                    return acc;
                }, {});
        
                // Iterasi setiap negara dan tambahkan <optgroup> ke dropdown
                Object.entries(groupedAirports).forEach(([country, airports]) => {
                    const optGroupFrom = document.createElement("optgroup");
                    const optGroupTo = document.createElement("optgroup");
        
                    optGroupFrom.label = country;
                    optGroupTo.label = country;
        
                    airports.forEach((airport) => {
                        const option = `<option value="${airport.airport_code}">${airport.city} - ${airport.airport_detail} (${airport.airport_code})</option>`;
                        optGroupFrom.innerHTML += option;
                        optGroupTo.innerHTML += option;
                    });
        
                    airportFromSelect.appendChild(optGroupFrom);
                    airportToSelect.appendChild(optGroupTo);
                });
            } catch (error) {
                console.error("Error fetching airports:", error);
            }
        }
        
        
        document.addEventListener("DOMContentLoaded", () => {
            fetchMaskapai();
            fetchAirport();
        });
    </script>
    <!-- Navbar -->
    <nav id="navbar" class="navbar navbar-expand navbar-dark bg-primary-local">
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNav"
          aria-controls="navbarNav"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav me-auto">
            <li class="nav-item">
              <a class="nav-link" aria-current="page" href="/index">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">About</a>
            </li>
            <li class="nav-item dropdown">
              <a
                class="nav-link dropdown-toggle "
                href="#"
                id="navbarDropdown"
                role="button"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >
                Flight
              </a>
              <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <li>
                  <a class="dropdown-item" href="/check-flight">Check Flight</a>
                </li>
                <li>
                  <a class="dropdown-item" href="/book-flight">Book Flight</a>
                </li>
              </ul>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">Contact</a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" href="/ticket-list">Check Ticket List</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/confirm-admin">Confirm Transaction</a>
            </li>
          </ul>
          <form class="d-flex">
            <input
              class="form-control"
              type="search"
              placeholder="Search"
              aria-label="Search"
            />
            <button
              id="search-button"
              class="btn btn-primary btn-outline-primary text-light btn-sm text-nowrap mx-3"
              type="submit"
            >
              Search Flight
            </button>
            <button id="logout-button" class="btn btn-danger btn-sm">
              Logout
            </button>
          </form>
        </div>
      </nav>
    
      <script>
          document.addEventListener("DOMContentLoaded", () => {
        const logoutButton = document.getElementById("logout-button");
    
        if (logoutButton) {
          logoutButton.addEventListener("click", async () => {
            logoutButton.disabled = true; // Disable tombol
            try {
              const response = await fetch(`/logout?_=${Date.now()}`, {
                method: "GET",
              });
    
              if (response.ok) {
                window.location.href = "/";
              } else {
                alert("Failed to logout. Please try again.");
              }
            } catch (error) {
              console.error("Error during logout:", error);
              alert("An error occurred while logging out. Please try again.");
            } finally {
              logoutButton.disabled = false; // Enable kembali tombol
            }
          });
        } else {
          console.error("Logout button not found.");
        }
      });
      </script> 
    
    
      <script src="/js/bootstrap.js"></script>
      <script src="/js/bootstrap.min.js"></script>
      <script src="/js/bootstrap.bundle.js"></script>
    
</head>
<body class="bg-pattern">
    <div class="card mx-auto" style="max-width: 600px;">
        <h5 class="card-header bg-primary-local text-white">Pembuatan Tiket Pesawat</h5>
        <div class="card-body">
            <form id="form-tiket" class="row g-3" method="POST">
                <div class="mb-1">
                <div class="mb-1">
                    <label for="pswt" class="form-label">Airline</label>
                    <select name="pesawat" id="pswt" class="form-select" required>
                    </select>
                </div>

                <div class="mb-1">
                    <label for="airportfrom" class="form-label">Departure</label>
                    <select name="airportfrom" id="airportfrom" class="form-select" required>
                    </select>
                </div>

                <div class="mb-1 js-example-basic-single">
                    <label for="airportto" class="form-label">Arrival</label>
                    <select name="airportto" id="airportto" class="form-select" required>
                    </select>
                </div>

                <div class="mb-1">
                <div class="mb-1">
                    <label for="class" class="form-label">Class</label>
                    <select name="class" id="class" class="form-select" required>
                        <option hidden selected>Select Class</option>
                        <option value="First">First Class</option>
                        <option value="Business">Business</option>
                        <option value="Premium">Premium Economy</option>
                        <option value="Economy">Economy</option>
                    </select>
                </div>

                <div class="mb-1">
                    <label for="price" class="form-label">Price</label>
                    <div class="input-group">
                        <span class="input-group-text">Rp.</span>
                        <input type="text" id="formattedPrice" class="form-control" placeholder="Masukkan Harga" required>
                        <input type="hidden" name="price" id="price">
                    </div>
                </div>

                <div class="row g-3 mb-1">
                <div class="row g-3 mb-1">
                    <div class="col-md-6">
                        <label for="takeoff" class="form-label">Take Off</label>
                        <input type="datetime-local" name="takeoff" id="takeoff" class="form-control" required>
                    </div>
                    <div class="col-md-6">
                        <label for="landing" class="form-label">Landing</label>
                        <input type="datetime-local" name="landing" id="landing" class="form-control" required>
                    </div>
                </div>
                <div class="d-flex justify-content-end ">
                    <div>
                            <a href="/ticket-list" class="btn btn-light btn-outline-dark mx-3">Back</a>
                    </div>
                    <div>
                        <button class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>
            </form>
        </div>
    </div>

    <!-- Modal Success -->
    <div id="successModal" class="modal" style="display:none;">
        <div class="modal-content" style="background-color: green; color: white;">
            <span class="close-btn" onclick="closeModal('successModal')">&times;</span>
            <p id="successMessage"></p>
        </div>
    </div>

    <!-- Modal Error -->
    <div id="errorModal" class="modal" style="display:none;">
        <div class="modal-content" style="background-color: red; color: white;">
            <span class="close-btn" onclick="closeModal('errorModal')">&times;</span>
            <p id="errorMessage"></p>
        </div>
    </div>

    <script src="/js/bootstrap.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/bootstrap.bundle.js"></script>
    <script>
        const apiUrl = "http://localhost:3000/addTicket";
        const pswt = document.getElementById("pswt");
        const airportfrom = document.getElementById("airportfrom");
        const airportto = document.getElementById("airportto");
        const kelas = document.getElementById("class");
        const takeoff = document.getElementById("takeoff");
        const landing = document.getElementById("landing");
        const formattedPriceInput = document.getElementById("formattedPrice");
        const hiddenPriceInput = document.getElementById("price");
    
        formattedPriceInput.addEventListener("input", (e) => {
            let value = e.target.value.replace(/[^0-9]/g, ""); // Hanya angka
            hiddenPriceInput.value = value; // Simpan nilai asli di input hidden
    
            // Format angka dengan titik
            formattedPriceInput.value = formatRupiah(value);
        });
    
        function formatRupiah(angka) {
            return angka.replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }
        
        document.getElementById('form-tiket').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            // Ambil data dari form
            const data = {
                pswt: pswt.value,                  // id pesawat
                airportfrom: airportfrom.value,
                airportto: airportto.value,  // format route_id misalnya: "ID-JP"
                class: kelas.value,                // kelas penerbangan
                takeoff: takeoff.value,            // waktu takeoff
                landing: landing.value,            // waktu landing
                price: hiddenPriceInput.value      // harga tiket
            };
        
            try {
                // Kirim data ke backend
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
        
                const result = await response.json();
        
                if (response.ok) {
                    // Success - Show success modal
                    document.getElementById("successMessage").textContent = result.message;
                    document.getElementById("successModal").style.display = "block";
                    window.location.href = '/ticket-list';
                } else {
                    document.getElementById("errorMessage").textContent = result.message;
                    document.getElementById("errorModal").style.display = "block";
                }
            } catch (error) {
                console.error("Error adding ticket:", error);
                document.getElementById("errorMessage").textContent = "An error occurred while adding the ticket.";
                document.getElementById("errorModal").style.display = "block";
            }
        });        
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = "none";
        }
    </script>
</body>

</html>
