<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>E-Ticketing - Ticket List</title>
    <link rel="stylesheet" href="/css/bootstrap.css" />
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/font-awesome.css" />
    <link rel="stylesheet" href="/css/all.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <style>
      /* CSS untuk modal gambar */
      .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        padding-top: 50px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.9);
      }
      
      .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        position: relative;
      }
      
      .close-image-modal {
        color: #fff;
        position: absolute;
        right: 25px;
        top: 0;
        font-size: 35px;
        font-weight: bold;
        cursor: pointer;
      }
      
      #modalImage {
        display: block;
        margin: 0 auto;
        max-width: 100%;
        max-height: 80vh;
        object-fit: contain;
      }
      
      .close-image-modal:hover,
      .close-image-modal:focus {
        color: #999;
        text-decoration: none;
        cursor: pointer;
      }
      </style>
  </head>
  <body class="bg-pattern">
     <!-- Navbar -->
     <nav id="navbar" class="navbar navbar-expand navbar-dark bg-primary-local">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto" id="nav-links">
          <li class="nav-item"><a class="nav-link" href="/homepage">Home</a></li>
          <li class="nav-item"><a class="nav-link" href="#">About</a></li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle active" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">Flight </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="/check-flight">Check Flight</a></li>
              <li><a class="dropdown-item" href="/book-flight">Book Flight</a></li>
            </ul>
          </li>
          <li class="nav-item"><a class="nav-link" href="/contact">Contact</a></li>
        </ul>
        <form class="d-flex">
          <input class="form-control" type="search" placeholder="Search" aria-label="Search" />
          <button id="search-button" class="btn btn-primary btn-sm text-nowrap mx-3" type="submit">Search Flight</button>
          <button id="logout-button" class="btn btn-danger text-nowrap btn-sm">Logout</button>
        </form>
      </div>
    </nav>


    <!-- Content -->
    <h1 class="text-center my-4"><strong>Transaction History</strong></h1>
    <div class="container my-4">
      <table class="table table-striped table-bordered rounded-table">
        <thead class="thead-dark">
          <tr>
            <th scope="col">Transaction ID</th>
            <th scope="col">Ticket No.</th>
            <th scope="col">Transaction Date</th>
            <th scope="col">Grand Total</th>
            <th scope="col">Status</th>
            <th scope="col">View</th>
          </tr>
        </thead>
        <tbody id="ticket-table-body"></tbody>
      </table>
    </div>

    <!-- Modal -->
    <div id="imageModal" class="modal">
      <div class="modal-content">
        <span class="close-image-modal">&times;</span>
        <img id="modalImage" src="" alt="Payment Proof" style="width: 100%; height: auto;">
      </div>
    </div>

    <script src="/js/bootstrap.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/bootstrap.bundle.js"></script>
    <script>
      async function fetchTicketing() {
        try {
          const response = await fetch("http://localhost:3000/checkflight");

          if (!response.ok) {
            throw new Error(`Failed to fetch data. Status: ${response.status}`);
          }

          const ticketing = await response.json();

          if (!Array.isArray(ticketing)) {
            throw new Error(
              "Expected an array of tickets, but got something else."
            );
          }

          // Render data tiket ke tabel
          renderTickets(ticketing);
        } catch (error) {
          console.error("Error while fetching ticketing data:", error);
        }
      }

      function renderTickets(ticketing) {
  const tableBody = document.getElementById("ticket-table-body");
  tableBody.innerHTML = "";

  ticketing.forEach((ticket) => {
    const imageUrl = ticket.proof ? `http://localhost:3000${ticket.proof}` : null;
    
    // Ubah tampilan menjadi button
    const proofButton = ticket.proof 
      ? `<div class="proof-cell">
           <button 
             class="btn btn-primary btn-sm view-proof-btn"
             onclick="openImageModal('${imageUrl}')"
           >
             View Proof
           </button>
         </div>` 
      : '<div class="proof-cell">No proof</div>';

    const row = `
      <tr>
        <td>${ticket.transaction_id}</td>
        <td>${ticket.ticket_id}</td>
        <td>${formatDate(ticket.transaction_date)}</td>
        <td>Rp. ${formatPrice(ticket.grand_total)}</td>
        <td>${ticket.isPaid}</td>
        <td>${proofButton}</td>
        <td>
          <button class="btn btn-outline-dark btn-sm view-ticket-btn" data-ticket-id="${ticket.ticket_id}">
            Detail
          </button>
        </td>
      </tr>
    `;
    tableBody.innerHTML += row;
  });
}

// Fungsi untuk membuka modal gambar
function openImageModal(imageUrl) {
  const modal = document.getElementById('imageModal');
  const modalImg = document.getElementById('modalImage');
  
  // Tambahkan event listener untuk loading
  modalImg.onload = function() {
    modal.style.display = "block";
  };
  
  modalImg.onerror = function() {
    alert('Failed to load image');
  };
  
  modalImg.src = imageUrl;
}

// Event listener untuk menutup modal
document.querySelector('.close-image-modal').addEventListener('click', function() {
  document.getElementById('imageModal').style.display = "none";
});

// Menutup modal ketika mengklik di luar gambar
window.addEventListener('click', function(event) {
  const modal = document.getElementById('imageModal');
  if (event.target === modal) {
    modal.style.display = "none";
  }
});

// Menutup modal dengan tombol ESC
document.addEventListener('keydown', function(event) {
  if (event.key === "Escape") {
    document.getElementById('imageModal').style.display = "none";
  }
});

// Fungsi untuk membuka modal gambar
function openImageModal(imageUrl) {
  const modal = document.getElementById('imageModal');
  const modalImg = document.getElementById('modalImage');
  
  modal.style.display = "block";
  modalImg.src = imageUrl;
}

// Event listener untuk menutup modal
document.querySelector('.close-image-modal').addEventListener('click', function() {
  document.getElementById('imageModal').style.display = "none";
});

// Menutup modal ketika mengklik di luar gambar
window.addEventListener('click', function(event) {
  const modal = document.getElementById('imageModal');
  if (event.target === modal) {
    modal.style.display = "none";
  }
});

// Menutup modal dengan tombol ESC
document.addEventListener('keydown', function(event) {
  if (event.key === "Escape") {
    document.getElementById('imageModal').style.display = "none";
  }
});

      window.onload = fetchTicketing;

      function formatDate(dateString) {
        const date = new Date(dateString);
        const day = String(date.getDate()).padStart(2, "0");
        const month = date.toLocaleString("en", { month: "short" });
        const year = date.getFullYear();
        const hours = String(date.getHours()).padStart(2, "0");
        const minutes = String(date.getMinutes()).padStart(2, "0");

        return `${day}-${month}-${year} ${hours}:${minutes}`;
      }

      function formatPrice(price) {
        return price.toLocaleString();
      }

      document.addEventListener("DOMContentLoaded", () => {
        const logoutButton = document.getElementById("logout-button");

        if (logoutButton) {
          logoutButton.addEventListener("click", async () => {
            logoutButton.disabled = true;
            try {
              const response = await fetch(`/logout?_=${Date.now()}`, {
                method: "GET",
              });

              if (response.ok) {
                window.location.href = "/";
              } else {
                alert("Failed to logout. Please try again.");
              }
            } catch (error) {
              console.error("Error during logout:", error);
              alert("An error occurred while logging out. Please try again.");
            } finally {
              logoutButton.disabled = false;
            }
          });
        } else {
          console.error("Logout button not found.");
        }
      });

      document.addEventListener("DOMContentLoaded", () => {
        const ticketTableBody = document.getElementById("ticket-table-body");

        // Edit ticket event listener
        ticketTableBody.addEventListener("click", async (event) => {
          const button = event.target.closest(".edit-ticket-btn");
          if (button) {
            event.preventDefault(); // Prevent default action

            const ticketId = button.getAttribute("data-ticket-id");
            if (!ticketId) {
              console.error("Invalid Ticket ID");
              return;
            }

            console.log("Ticket ID:", ticketId);

            // Redirect to the edit ticket page
            window.location.href = `/ticket-edit/${ticketId}`;
          }
        });
      });

      const ticketTableBody = document.getElementById("ticket-table-body");
      const modal = document.getElementById("ticketDetailModal");
      const modalContent = document.getElementById("ticketDetailContent");
      const closeModal = document.querySelector(".close-btn");

      // Event untuk tombol "View Ticket"
      ticketTableBody.addEventListener("click", async (event) => {
        if (event.target.closest(".view-ticket-btn")) {
          event.preventDefault();

          const ticketId = event.target
            .closest(".view-ticket-btn")
            .getAttribute("data-ticket-id");

          try {
            const response = await fetch(
              `http://localhost:3000/ticket/${ticketId}`
            );
            if (!response.ok) {
              throw new Error("Failed to fetch ticket details");
            }

            const ticket = await response.json();

            let className = "";
            switch (ticket.class) {
              case "First":
                className = "First Class";
                break;
              case "Business":
                className = "Business";
                break;
              case "Premium":
                className = "Premium Economy";
                break;
              case "Economy":
                className = "Economy";
                break;
              default:
                className = "Unknown";
            }

            // Format dan masukkan data ke dalam modal
            modalContent.innerHTML = `
          <div class="ticket-modal">
                <div class="ticket-details-container">
                  <div class="content-ticket">
                    <h1 class="ticket-title"><strong>Ticket Detail</strong></h1>
                      <div class="details-grid">
                        <div>
                          <p><strong>Ticket ID</strong></p>
                          <p>${ticket.ticket_id}</p>
                        </div>
                        <div>
                          <p><strong>Airlines</strong></p>
                          <p>${ticket.nama_pesawat}</p>
                        </div>
                        <div>
                          <p><strong>Price</strong></p>
                          <p>Rp. ${formatPrice(ticket.price)}</p>
                        </div>
                        <div>
                          <p><strong>Departure</strong></p>
                          <p>${ticket.country_origin} - ${
                          ticket.airport_name_origin
                          } (${ticket.airport_code_origin})</p>
                        </div>
                        <div>
                          <p><strong>Arrival</strong></p>
                          <p>${ticket.country_destination} -
                             ${ticket.airport_name_destination} (${ticket.airport_code_destination})</p>
                        </div>
                        <div>
                          <p><strong>Class</strong></p>
                          <p>${className}</p>
                        </div>
                        <div>
                          <p><strong>Take Off</strong></p>
                          <p>${formatDate(ticket.takeoff)}</p>
                        </div>
                        <div>
                          <p><strong>Landing</strong></p>
                          <p>${formatDate(ticket.landing)}</p>
                        </div>
                        <div>
                        </div>
                      </div>
                  </div>
      </div>


              `;

            // Tampilkan modal
            modal.style.display = "block";
          } catch (error) {
            console.error("Error fetching ticket details:", error);
            modalContent.innerHTML = `<p class="text-danger">Failed to load ticket details. Please try again.</p>`;
          }
        }
      });

      // Event untuk menutup modal
      closeModal.addEventListener("click", () => {
        modal.style.display = "none";
      });

      // Tutup modal jika klik di luar konten modal
      window.addEventListener("click", (event) => {
        if (event.target === modal) {
          modal.style.display = "none";
        }
      });
      // Tutup modal jika menekan tombol Escape (Esc)
      document.addEventListener("keydown", (event) => {
        if (event.key === "Escape" && modal.style.display === "block") {
          modal.style.display = "none";
        }
      });

      
  document.addEventListener("DOMContentLoaded", function() {
          fetch("/session")
            .then(response => response.json())
            .then(data => {
              if (data.success && data.user) {
                const isAdmin = data.user.isAdmin === "Y";
                const navLinks = document.getElementById("nav-links");
                
                if (isAdmin) {
                  navLinks.innerHTML += `
                    <li class="nav-item"><a class="nav-link" href="/ticket-list">Check Ticket List</a></li>
                    <li class="nav-item"><a class="nav-link" href="/confirm-admin">Confirm Transaction</a></li>
                  `;
                }
              }
            })
            .catch(error => console.error("Error fetching session data:", error));
        });
    </script>
  </body>
</html>