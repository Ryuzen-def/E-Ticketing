<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>E-Ticketing - Book Flight</title>
    <link rel="stylesheet" href="/css/bootstrap.css" />
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/font-awesome.css" />
    <link rel="stylesheet" href="/css/all.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
  </head>
  <body class="bg-pattern">
   <!-- Navbar -->
   <nav id="navbar" class="navbar navbar-expand navbar-dark bg-primary-local">
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav me-auto" id="nav-links">
        <li class="nav-item"><a class="nav-link " href="/homepage">Home</a></li>
        <li class="nav-item"><a class="nav-link" href="#">About</a></li>
        <li class="nav-item dropdown">
          <a class="nav-link active dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">Flight </a>
          <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
            <li><a class="dropdown-item" href="/check-flight">Check Flight</a></li>
            <li><a class="dropdown-item" href="/book-flight">Book Flight</a></li>
          </ul>
        </li>
        <li class="nav-item"><a class="nav-link" href="/contact">Contact</a></li>
      </ul>
      <form class="d-flex">
        <input class="form-control" type="search" placeholder="Search" aria-label="Search" />
        <button id="search-button" class="btn btn-primary btn-sm text-nowrap mx-3" type="submit">Search Flight</button>
        <button id="logout-button" class="btn btn-danger text-nowrap btn-sm">Logout</button>
      </form>
    </div>
  </nav>
    <!-- Content -->
    <h1 class="text-center my-4"><strong>Book Flight</strong></h1>
    <div class="container my-4">
      <div class="d-flex justify-content-end align-items-center">

        <div class="dropdown">
          <button
            class="btn btn-secondary dropdown-toggle"
            type="button"
            id="filterDropdown"
            data-bs-toggle="dropdown"
            aria-expanded="false"
          >
            Filter & Sort
          </button>
          <ul class="dropdown-menu" aria-labelledby="filterDropdown">
            <li class="dropdown-item">
              <label><strong>Sort Alphabetically</strong></label>
              <div>
                <input type="radio" name="sort" value="az" id="sortAZ" />
                <label for="sortAZ">A - Z</label>
              </div>
              <div>
                <input type="radio" name="sort" value="za" id="sortZA" />
                <label for="sortZA">Z - A</label>
              </div>
              <div>
                <input type="radio" name="sort" value="none" id="sortNone" checked />
                <label for="sortNone">None</label>
              </div>
            </li>
            <li class="dropdown-item">
              <label for="filterPrice"><strong>Filter by Price</strong></label>
              <select id="filterPrice" class="form-select">
                <option value="all">All</option>
                <option value="low">Low to High</option>
                <option value="high">High to Low</option>
              </select>
            </li>
            <li class="dropdown-item">
              <label for="filterClass"><strong>Filter by Class</strong></label>
              <select id="filterClass" class="form-select">
                <option value="all">All</option>
                <option value="economy">Economy</option>
                <option value="premium">Premium Economy</option>
                <option value="business">Business</option>
                <option value="first">First Class</option>
              </select>
            </li>
            <li class="dropdown-item">
              <label for="filterAirlines"
                ><strong>Filter by Airlines</strong></label
              >
              <select id="filterAirlines" class="form-select">
                <option value="all">All</option>
                <option value="garuda">Garuda Indonesia</option>
                <option value="batik">Batik Air</option>
                <option value="lion">Lion Air</option>
                <option value="citilink">Citilink</option>
                <option value="airasia">Indonesia AirAsia</option>
              </select>
            </li>
            <li class="dropdown-item text-center mt-2">
              <button id="applyFiltersBtn" class="btn btn-primary">Apply Filters</button>
            </li>
          </ul>
        </div>
      </div>
      <table class="table table-striped table-bordered rounded-table">
        <thead class="thead-dark">
          <tr>
            <th scope="col">Ticket No.</th>
            <th scope="col">Departure at</th>
            <th scope="col">Destination at</th>
            <th scope="col">Airlines</th>
            <th scope="col">Class</th>
            <th scope="col">Price</th>
            <th scope="col">Action</th>
          </tr>
        </thead>
        <tbody id="ticket-table-body"></tbody>
      </table>
    </div>

    <!-- Modal -->
    <div id="ticketDetailModal" class="modal">
      <div class="modal-content">
        <span class="close-btn">&times;</span>
        <div id="ticketDetailContent">
          <!-- Konten modal akan diisi melalui JavaScript -->
        </div>
      </div>
    </div>

    <script src="/js/bootstrap.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/bootstrap.bundle.js"></script>
    <script>
      async function fetchTicketing() {
        try {
          const response = await fetch("http://localhost:3000/ticketing");

          if (!response.ok) {
            throw new Error(`Failed to fetch data. Status: ${response.status}`);
          }

          const ticketing = await response.json();

          if (!Array.isArray(ticketing)) {
            throw new Error(
              "Expected an array of tickets, but got something else."
            );
          }

          // Render data tiket ke tabel
          renderTickets(ticketing);
        } catch (error) {
          console.error("Error while fetching ticketing data:", error);
        }
      }
      document.getElementById("applyFiltersBtn").addEventListener("click", applyFilters);
async function applyFilters() {
    try {
        const response = await fetch("http://localhost:3000/ticketing");
        const tickets = await response.json();
        let filteredTickets = tickets;

        // Filter berdasarkan maskapai
        const selectedAirline = document.getElementById("filterAirlines").value;
        if (selectedAirline !== "all") {
            filteredTickets = filteredTickets.filter(ticket => 
                ticket.nama_pesawat.toLowerCase().includes(selectedAirline)
            );
        }

        // Filter berdasarkan kelas
        const selectedClass = document.getElementById("filterClass").value;
        if (selectedClass !== "all") {
            filteredTickets = filteredTickets.filter(ticket => 
                ticket.class && ticket.class.toLowerCase() === selectedClass
            );
        }

        // Sorting berdasarkan harga
        const selectedPrice = document.getElementById("filterPrice").value;
        if (selectedPrice === "low") {
            filteredTickets.sort((a, b) => a.price - b.price);
        } else if (selectedPrice === "high") {
            filteredTickets.sort((a, b) => b.price - a.price);
        }

        // Sorting berdasarkan alfabet (dengan opsi "None")
        const selectedSortElement = document.querySelector("input[name='sort']:checked");
        if (selectedSortElement) {
            const selectedSort = selectedSortElement.value;
            if (selectedSort === "az") {
                filteredTickets.sort((a, b) => a.nama_pesawat.localeCompare(b.nama_pesawat));
            } else if (selectedSort === "za") {
                filteredTickets.sort((a, b) => b.nama_pesawat.localeCompare(a.nama_pesawat));
            }
        }

        renderTickets(filteredTickets);
    } catch (error) {
        console.error("Error while filtering data:", error);
    }
}

      function renderTickets(ticketing) {
        const tableBody = document.getElementById("ticket-table-body");
        tableBody.innerHTML = ""; // Kosongkan isi tabel sebelum diisi ulang

        ticketing.forEach((ticket) => {
          let className = "";
          switch (ticket.class) {
            case "First":
              className = "First Class";
              break;
            case "Business":
              className = "Business";
              break;
            case "Premium":
              className = "Premium Economy";
              break;
            case "Economy":
              className = "Economy";
              break;
            default:
              className = "Unknown";
          }

          const row = `
            <tr>
              <td>${ticket.ticket_id}</td>
              <td>${ticket.airport_code_origin}</td>
              <td>${ticket.airport_code_destination}</td>
              <td>${ticket.nama_pesawat}</td>
              <td>${className}</td>
              <td>Rp. ${formatPrice(ticket.price)}</td>
              <td>
                <button class="btn btn-outline-success btn-sm edit-ticket-btn" data-ticket-id="${
                  ticket.ticket_id
                }">Buy Ticket</button>
              </td>
            </tr>
          `;
          tableBody.innerHTML += row;
        });
      }

      window.onload = fetchTicketing;

      function formatDate(dateString) {
        const date = new Date(dateString);
        const day = String(date.getDate()).padStart(2, "0");
        const month = date.toLocaleString("en", { month: "short" });
        const year = date.getFullYear();
        const hours = String(date.getHours()).padStart(2, "0");
        const minutes = String(date.getMinutes()).padStart(2, "0");

        return `${day}-${month}-${year} ${hours}:${minutes}`;
      }

      function formatPrice(price) {
        return price.toLocaleString();
      }

      document.addEventListener("DOMContentLoaded", () => {
        const logoutButton = document.getElementById("logout-button");
    
        if (logoutButton) {
            logoutButton.addEventListener("click", async () => {
                logoutButton.disabled = true;
                try {
                    const response = await fetch(`/logout?_=${Date.now()}`, {
                        method: "GET",
                    });
    
                    if (response.ok) {
                        window.location.href = "/";
                    } else {
                        alert("Failed to logout. Please try again.");
                    }
                } catch (error) {
                    console.error("Error during logout:", error);
                    alert("An error occurred while logging out. Please try again.");
                } finally {
                    logoutButton.disabled = false;
                }
            });
        } else {
            console.error("Logout button not found.");
        }
    
        const ticketTableBody = document.getElementById("ticket-table-body");
    
        // Edit ticket event listener
        ticketTableBody.addEventListener("click", async (event) => {
            const button = event.target.closest(".edit-ticket-btn");
            if (button) {
                event.preventDefault(); // Prevent default action
    
                const ticketId = button.getAttribute("data-ticket-id");
                if (!ticketId) {
                    console.error("Invalid Ticket ID");
                    return;
                }
    
                console.log("Ticket ID:", ticketId);
    
                // Redirect to the buy ticket page with the ticket ID
                window.location.href = `/buy-ticket/${ticketId}`; // Include the ticket ID in the URL
            }
        });
    });

      const ticketTableBody = document.getElementById("ticket-table-body");
      const modal = document.getElementById("ticketDetailModal");
      const modalContent = document.getElementById("ticketDetailContent");
      const closeModal = document.querySelector(".close-btn");

      // Event untuk tombol "View Ticket"
      ticketTableBody.addEventListener("click", async (event) => {
        if (event.target.closest(".view-ticket-btn")) {
          event.preventDefault();

          const ticketId = event.target
            .closest(".view-ticket-btn")
            .getAttribute("data-ticket-id");

          try {
            const response = await fetch(
              `http://localhost:3000/ticket/${ticketId}`
            );
            if (!response.ok) {
              throw new Error("Failed to fetch ticket details");
            }

            const ticket = await response.json();

            let className = "";
            switch (ticket.class) {
              case "First":
                className = "First Class";
                break;
              case "Business":
                className = "Business";
                break;
              case "Premium":
                className = "Premium Economy";
                break;
              case "Economy":
                className = "Economy";
                break;
              default:
                className = "Unknown";
            }

            // Format dan masukkan data ke dalam modal
            modalContent.innerHTML = `
          <div class="ticket-details-container">
          <div class="content-ticket">
              <h1 class="ticket-title"><strong>Ticket Detail</strong></h1>
              <div class="details-grid">
                  <div>
                      <p><strong>Ticket ID</strong></p>
                      <p>${ticket.ticket_id}</p>
                  </div>
                  <div>
                      <p><strong>Airlines</strong></p>
                      <p>${ticket.nama_pesawat}</p>
                  </div>
                    <div>
                      <p><strong>Price</strong></p>
                      <p>Rp. ${formatPrice(ticket.price)}</p>
                  </div>
                  <div>
                      <p><strong>Departure</strong></p>
                      <p>${ticket.country_origin} - ${
              ticket.airport_name_origin
            } (${ticket.airport_code_origin})</p>
                  </div>
                  <div>
                      <p><strong>Arrival</strong></p>
                      <p>${ticket.country_destination} - ${
              ticket.airport_name_destination
            } (${ticket.airport_code_destination})</p>
                  </div>
                  <div>
                      <p><strong>Class</strong></p>
                      <p>${className}</p>
                  </div>
                  <div>
                      <p><strong>Take Off</strong></p>
                      <p>${formatDate(ticket.takeoff)}</p>
                  </div>
                  <div>
                      <p><strong>Landing</strong></p>
                      <p>${formatDate(ticket.landing)}</p>
                  </div>
          </div>
          </div>
          <div class="banner">
              <p class="vertical-text">Skyventurer</p>
          </div>
      </div>

              `;

            // Tampilkan modal
            modal.style.display = "block";
          } catch (error) {
            console.error("Error fetching ticket details:", error);
            modalContent.innerHTML = `<p class="text-danger">Failed to load ticket details. Please try again.</p>`;
          }
        }
      });

      // Event untuk menutup modal
      closeModal.addEventListener("click", () => {
        modal.style.display = "none";
      });

      // Tutup modal jika klik di luar konten modal
      window.addEventListener("click", (event) => {
        if (event.target === modal) {
          modal.style.display = "none";
        }
      });
      // Tutup modal jika menekan tombol Escape (Esc)
      document.addEventListener("keydown", (event) => {
        if (event.key === "Escape" && modal.style.display === "block") {
          modal.style.display = "none";
        }
      });

      
  document.addEventListener("DOMContentLoaded", function() {
          fetch("/session")
            .then(response => response.json())
            .then(data => {
              if (data.success && data.user) {
                const isAdmin = data.user.isAdmin === "Y";
                const navLinks = document.getElementById("nav-links");
                
                if (isAdmin) {
                  navLinks.innerHTML += `
                    <li class="nav-item"><a class="nav-link" href="/ticket-list">Check Ticket List</a></li>
                    <li class="nav-item"><a class="nav-link" href="/confirm-admin">Confirm Transaction</a></li>
                  `;
                }
              }
            })
            .catch(error => console.error("Error fetching session data:", error));
        });
    </script>
  </bodycl>
</html>
